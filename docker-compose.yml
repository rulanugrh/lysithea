version: '3.9'
services:
  db:
    container_name: db-app
    image: postgres:alpine
    hostname: db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    restart: unless-stopped
    ports:
      - 127.0.0.1:5432:5432
    networks:
      - connection

  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - EXPOSE_PORT=${APP_PORT}
    environment:
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - APP_HOST=${APP_HOST}
      - APP_PORT=${APP_PORT}
      - APP_ORIGIN=${APP_ORIGIN}
      - APP_SECRET=${APP_SECRET}
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - connection
    depends_on:
      - db

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.2
    ports:
      - "9300:9300"
      - "9200:9200"
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - network.host=0.0.0.0
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - connection
    depends_on:
      - db

  kibana:
    image: docker.elastic.co/kibana/kibana:7.3.2
    ports:
      - "5601:5601"
    networks:
      - connection
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:7.3.1
    container_name: logstash
    volumes:
      - ./infrastructure/elk/pusher.conf:/usr/share/logstash/config/pusher.conf:ro
      - ./infrastructure/elk/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./infrastructure/elk/postgresql-42.7.1.jar:/usr/share/logstash/logstash-core/lib/jars/postgresql-42.7.1.jar:ro
    command: bash -c "/usr/share/logstash/bin/logstash-plugin install logstash-input-jdbc && logstash -f /usr/share/logstash/config/pusher.conf"
    ports:
      - "9601:9601"
      - "5045:5045"
    networks:
      - connection
    depends_on:
      - elasticsearch
      - kibana
      - postgres

  nginx-app:
    container_name: nginx-app
    image: nginx
    hostname: gateway
    ports:
      - 80:80
    restart: unless-stopped
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - connection

volumes:
  elasticsearch_data:


networks:
  connection:
    driver: bridge
